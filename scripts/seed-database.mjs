#!/usr/bin/env node

import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

dotenv.config({ path: path.join(__dirname, '..', '.env') });

console.log('üå± POPULANDO DADOS INICIAIS - CURSOS NR');
console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n');

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY;

if (!supabaseUrl || !supabaseKey) {
    console.error('‚ùå Vari√°veis de ambiente n√£o encontradas');
    process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

async function seedCourses() {
    const courses = [
        {
            course_code: 'NR12',
            title: 'NR12 - Seguran√ßa em M√°quinas e Equipamentos',
            description: 'Curso completo sobre seguran√ßa no trabalho com m√°quinas e equipamentos.',
            thumbnail_url: 'nr12-thumb.jpg',
            duration: 480,
            modules_count: 9,
            status: 'active',
            metadata: {
                category: 'Seguran√ßa do Trabalho',
                difficulty: 'Intermedi√°rio',
                requirements: ['Ensino Fundamental Completo'],
                certification: true
            }
        },
        {
            course_code: 'NR33',
            title: 'NR33 - Seguran√ßa em Espa√ßos Confinados',
            description: 'Treinamento essencial para trabalho seguro em espa√ßos confinados.',
            thumbnail_url: 'nr33-thumb.jpg',
            duration: 480,
            modules_count: 8,
            status: 'active',
            metadata: {
                category: 'Seguran√ßa do Trabalho',
                difficulty: 'Avan√ßado',
                requirements: ['Ensino M√©dio Completo'],
                certification: true
            }
        },
        {
            course_code: 'NR35',
            title: 'NR35 - Trabalho em Altura',
            description: 'Capacita√ß√£o para trabalho seguro em altura conforme legisla√ß√£o.',
            thumbnail_url: 'nr35-thumb.jpg',
            duration: 480,
            modules_count: 10,
            status: 'active',
            metadata: {
                category: 'Seguran√ßa do Trabalho',
                difficulty: 'Intermedi√°rio',
                requirements: ['Ensino Fundamental Completo', 'Aptid√£o F√≠sica'],
                certification: true
            }
        }
    ];

    console.log('üìù Inserindo cursos...\n');

    for (const course of courses) {
        try {
            const { data, error } = await supabase
                .from('nr_courses')
                .upsert(course, { onConflict: 'course_code' })
                .select();

            if (error) {
                console.log(`‚ùå ${course.course_code}: ${error.message}`);
            } else {
                console.log(`‚úÖ ${course.course_code}: ${course.title}`);
            }
        } catch (err) {
            console.log(`‚ùå ${course.course_code}: ${err.message}`);
        }
    }

    console.log('\nüìä Verificando cursos inseridos...\n');

    const { data: allCourses, error } = await supabase
        .from('nr_courses')
        .select('course_code, title, modules_count');

    if (error) {
        console.log(`‚ùå Erro ao buscar cursos: ${error.message}`);
    } else {
        console.log(`‚úÖ Total de cursos: ${allCourses?.length || 0}`);
        allCourses?.forEach(c => {
            console.log(`   - ${c.course_code}: ${c.title}`);
        });
    }
}

async function seedModules() {
    console.log('\nüìù Inserindo m√≥dulos de exemplo (NR12)...\n');

    // Buscar ID do curso NR12
    const { data: nr12Course, error: findCourseError } = await supabase
        .from('nr_courses')
        .select('id')
        .eq('course_code', 'NR12')
        .single();

    if (findCourseError || !nr12Course) {
        console.log('‚ö†Ô∏è  Curso NR12 n√£o encontrado, pulando m√≥dulos');
        return;
    }

    const modules = [
        {
            course_id: nr12Course.id,
            order_index: 1,
            title: 'Introdu√ß√£o √† NR12',
            description: 'Conceitos b√°sicos e objetivos da norma',
            duration: 40,
            content: { topics: ['O que √© a NR12', 'Objetivos', 'Aplica√ß√£o'] }
        },
        {
            course_id: nr12Course.id,
            order_index: 2,
            title: 'Arranjos F√≠sicos e Instala√ß√µes',
            description: 'Requisitos para arranjos f√≠sicos seguros',
            duration: 50,
            content: { topics: ['Organiza√ß√£o', 'Sinaliza√ß√£o', 'Acesso seguro'] }
        },
        {
            course_id: nr12Course.id,
            order_index: 3,
            title: 'Instala√ß√µes e Dispositivos El√©tricos',
            description: 'Seguran√ßa em instala√ß√µes el√©tricas',
            duration: 45,
            content: { topics: ['NR10 x NR12', 'Prote√ß√µes', 'Bloqueio e etiquetagem'] }
        },
        {
            course_id: nr12Course.id,
            order_index: 4,
            title: 'Partida, Acionamento e Parada',
            description: 'Sistemas de controle e seguran√ßa',
            duration: 40,
            content: { topics: ['Bot√µes de emerg√™ncia', 'Parada segura', 'Intertravamentos'] }
        },
        {
            course_id: nr12Course.id,
            order_index: 5,
            title: 'Sistemas de Seguran√ßa',
            description: 'Implementa√ß√£o de sistemas de prote√ß√£o',
            duration: 55,
            content: { topics: ['Grades', 'Cortinas de luz', 'Sensores de presen√ßa'] }
        },
        {
            course_id: nr12Course.id,
            order_index: 6,
            title: 'Riscos Mec√¢nicos',
            description: 'Identifica√ß√£o e mitiga√ß√£o de riscos',
            duration: 50,
            content: { topics: ['Cisalhamento', 'Apreens√£o', 'Impacto'] }
        },
        {
            course_id: nr12Course.id,
            order_index: 7,
            title: 'Manuten√ß√£o Segura',
            description: 'Procedimentos de manuten√ß√£o com seguran√ßa',
            duration: 45,
            content: { topics: ['Bloqueio e etiquetagem', 'Permiss√£o de trabalho'] }
        },
        {
            course_id: nr12Course.id,
            order_index: 8,
            title: 'Treinamento e Capacita√ß√£o',
            description: 'Exig√™ncias de treinamento NR12',
            duration: 35,
            content: { topics: ['Conte√∫do m√≠nimo', 'Periodicidade', 'Registros'] }
        },
        {
            course_id: nr12Course.id,
            order_index: 9,
            title: 'Inspe√ß√µes e Auditorias',
            description: 'Como realizar inspe√ß√µes e auditorias conforme NR12',
            duration: 45,
            content: { topics: ['Checklists', 'Relat√≥rios', 'A√ß√µes corretivas'] }
        }
    ];

    try {
        const { data, error } = await supabase
            .from('nr_modules')
            .insert(modules)
            .select();

        if (error) {
            console.log(`‚ùå Erro ao inserir m√≥dulos: ${error.message}`);
        } else {
            console.log(`‚úÖ ${data?.length || modules.length} m√≥dulos inseridos para NR12`);
        }
    } catch (err) {
        console.log(`‚ùå Erro ao inserir m√≥dulos: ${err.message}`);
    }
}

async function main() {
    try {
        await seedCourses();
        await seedModules();
        
        console.log('\n‚úÖ Seed conclu√≠do com sucesso!\n');
        process.exit(0);
    } catch (error) {
        console.error('\n‚ùå Erro:', error.message);
        process.exit(1);
    }
}

main();
