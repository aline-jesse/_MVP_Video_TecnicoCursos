# ============================================
# üîê TEMPLATE .env.local - SUPABASE
# ============================================
# 
# INSTRU√á√ïES:
# 1. Copie este conte√∫do para app/.env.local
# 2. Substitua os valores entre [COLCHETES]
# 3. Nunca commite este arquivo no git!
#
# ============================================

# ============================================
# üóÑÔ∏è SUPABASE DATABASE
# ============================================

# Connection Pooling (Para aplica√ß√£o Next.js)
# Obtido em: Supabase ‚Üí Settings ‚Üí Database ‚Üí Connection string ‚Üí URI
# IMPORTANTE: Substitua [YOUR-PASSWORD] pela senha do projeto
DATABASE_URL="postgresql://postgres:[YOUR-PASSWORD]@db.[YOUR-PROJECT-ID].supabase.co:5432/postgres?pgbouncer=true&connection_limit=1"

# Direct Connection (Para migrations com Prisma)
# Mesma URL, mas SEM pgbouncer
# Obtido em: Supabase ‚Üí Settings ‚Üí Database ‚Üí Connection string ‚Üí URI (Session mode)
DIRECT_DATABASE_URL="postgresql://postgres:[YOUR-PASSWORD]@db.[YOUR-PROJECT-ID].supabase.co:5432/postgres"

# ============================================
# üîë SUPABASE API (Opcional - para futuro)
# ============================================

# URL do projeto
# Obtido em: Supabase ‚Üí Settings ‚Üí API ‚Üí Project URL
NEXT_PUBLIC_SUPABASE_URL="https://[YOUR-PROJECT-ID].supabase.co"

# Chave p√∫blica (anon key)
# Obtido em: Supabase ‚Üí Settings ‚Üí API ‚Üí Project API keys ‚Üí anon public
NEXT_PUBLIC_SUPABASE_ANON_KEY="[YOUR-ANON-KEY]"

# Chave de servi√ßo (NUNCA EXPONHA NO CLIENTE!)
# Obtido em: Supabase ‚Üí Settings ‚Üí API ‚Üí Project API keys ‚Üí service_role
SUPABASE_SERVICE_ROLE_KEY="[YOUR-SERVICE-KEY]"

# ============================================
# üéôÔ∏è TTS SERVICES (Azure / ElevenLabs)
# ============================================

# Azure Text-to-Speech
AZURE_TTS_KEY="[YOUR-AZURE-KEY]"
AZURE_TTS_REGION="brazilsouth"

# ElevenLabs
ELEVENLABS_API_KEY="[YOUR-ELEVENLABS-KEY]"

# ============================================
# üîê NEXTAUTH
# ============================================

NEXTAUTH_URL="http://localhost:3000"
NEXTAUTH_SECRET="[GERE-UM-SECRET-ALEATORIO]"

# ============================================
# üì¶ OUTROS SERVI√áOS
# ============================================

# AWS S3 (se usar)
AWS_ACCESS_KEY_ID="[YOUR-AWS-KEY]"
AWS_SECRET_ACCESS_KEY="[YOUR-AWS-SECRET]"
AWS_REGION="us-east-1"
AWS_S3_BUCKET="[YOUR-BUCKET-NAME]"

# ============================================
# üîç EXEMPLO REAL (COM DADOS FICT√çCIOS)
# ============================================
# 
# DATABASE_URL="postgresql://postgres:MinhaSenh@Forte123@db.xyzabcdefghijk.supabase.co:5432/postgres?pgbouncer=true&connection_limit=1"
# DIRECT_DATABASE_URL="postgresql://postgres:MinhaSenh@Forte123@db.xyzabcdefghijk.supabase.co:5432/postgres"
# NEXT_PUBLIC_SUPABASE_URL="https://xyzabcdefghijk.supabase.co"
# NEXT_PUBLIC_SUPABASE_ANON_KEY="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
#
# ============================================

# ============================================
# üìù NOTAS
# ============================================
#
# 1. SENHA COM CARACTERES ESPECIAIS:
#    Se sua senha tem caracteres especiais (@ # % &), voc√™ precisa URL encode:
#    @ = %40
#    # = %23
#    % = %25
#    & = %26
#    
#    Exemplo: senha "Test@123" vira "Test%40123"
#
# 2. VERIFICAR CONEX√ÉO:
#    npx prisma db push
#
# 3. CRIAR MIGRA√á√ÉO:
#    npx prisma migrate dev --name init
#
# 4. ABRIR STUDIO:
#    npx prisma studio
#
# ============================================
