

/**
 * üèóÔ∏è NR Template Studio - Video Generation API
 */

import { NextRequest, NextResponse } from 'next/server';

export async function POST(request: NextRequest) {
  try {
    const config = await request.json();
    
    const { template, customizacoes, opcoes } = config;
    
    if (!template || !customizacoes.empresa) {
      return NextResponse.json(
        { success: false, error: 'Template e nome da empresa s√£o obrigat√≥rios' },
        { status: 400 }
      );
    }

    // Gerar ID √∫nico do job
    const jobId = `nr_template_${Date.now()}`;
    
    // Configura√ß√£o avan√ßada de gera√ß√£o
    const videoConfig = {
      template: {
        id: template.id,
        nome: template.nome,
        nr: template.nr,
        tipo: template.tipo,
        duracao: template.duracaoMinutos
      },
      personalizacao: {
        empresa: customizacoes.empresa,
        setor: customizacoes.setor,
        narrativaCustom: customizacoes.narrativaPersonalizada || null
      },
      especificacoesTecnicas: {
        qualidade: opcoes.qualidade,
        formato: opcoes.formato,
        idioma: opcoes.idioma,
        acessibilidade: opcoes.acessibilidade
      },
      recursos: {
        avatar3D: template.recursos.avatar3D,
        cenarios3D: template.recursos.cenarios3D,
        quizInterativo: template.recursos.quizInterativo,
        narracaoIA: template.recursos.narracaoIA,
        legendasAutomaticas: template.recursos.legendasAutomaticas
      },
      compliance: {
        nrEspecifica: template.nr,
        certificacaoMTE: true,
        rastreabilidadeCompleta: true,
        auditTrail: true
      }
    };

    // Estimar tempo de processamento baseado na complexidade
    const estimatedTime = calculateProcessingTime(template);

    return NextResponse.json({
      success: true,
      jobId,
      videoConfig,
      estimatedTime,
      processamento: {
        etapas: [
          'An√°lise da NR com IA especializada',
          'Gera√ß√£o de conte√∫do personalizado',
          'Cria√ß√£o de cen√°rios 3D (se aplic√°vel)',
          'S√≠ntese de voz com IA brasileira',
          'Renderiza√ß√£o de v√≠deo em alta qualidade',
          'Gera√ß√£o de quiz interativo',
          'Valida√ß√£o de conformidade',
          'Cria√ß√£o de certificado digital'
        ],
        tempoEstimado: estimatedTime,
        qualidade: 'Enterprise Grade',
        conformidade: '100% MTE'
      },
      proximosPasos: [
        'Acompanhe o progresso em tempo real',
        'Receba notifica√ß√£o por email quando pronto',
        'Fa√ßa download do v√≠deo e materiais',
        'Publique no seu LMS ou use diretamente'
      ]
    });

  } catch (error) {
    console.error('NR Template generation error:', error);
    return NextResponse.json(
      { success: false, error: 'Failed to generate NR template video' },
      { status: 500 }
    );
  }
}

function calculateProcessingTime(template: any): string {
  let baseTime = template.duracaoMinutos * 0.1; // 10% da dura√ß√£o final
  
  // Adicionar tempo baseado na complexidade
  baseTime += template.complexidade * 0.5;
  
  // Adicionar tempo baseado nos recursos
  if (template.recursos.avatar3D) baseTime += 1;
  if (template.recursos.cenarios3D) baseTime += 2;
  if (template.recursos.realidadeVirtual) baseTime += 3;
  if (template.recursos.quizInterativo) baseTime += 0.5;
  
  const minutes = Math.ceil(baseTime);
  return `${minutes}-${minutes + 2} minutos`;
}

