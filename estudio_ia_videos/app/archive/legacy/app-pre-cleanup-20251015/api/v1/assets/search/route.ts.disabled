
/**
 * ðŸŽ¨ API Assets Search - Busca unificada de assets
 */

import { NextRequest, NextResponse } from 'next/server'
import { assetsManager } from '../../../lib/assets-manager'

export async function GET(request: NextRequest) {
  try {
    const { searchParams } = new URL(request.url)
    
    const query = searchParams.get('q') || ''
    const type = searchParams.get('type')
    const category = searchParams.get('category')
    const license = searchParams.get('license')
    const orientation = searchParams.get('orientation')
    const quality = searchParams.get('quality')
    const safeSearch = searchParams.get('safeSearch') !== 'false'
    const page = parseInt(searchParams.get('page') || '1')
    const perPage = parseInt(searchParams.get('perPage') || '20')

    // Construir filtros
    const filters: any = { safeSearch }
    if (type && type !== 'all') filters.type = type
    if (category && category !== 'all') filters.category = category
    if (license && license !== 'all') filters.license = license
    if (orientation && orientation !== 'all') filters.orientation = orientation
    if (quality && quality !== 'all') filters.quality = quality

    // Executar busca
    const result = await assetsManager.searchAll(query, filters, page, perPage)

    return NextResponse.json({
      success: true,
      data: result
    })

  } catch (error) {
    console.error('Erro na busca de assets:', error)
    return NextResponse.json(
      { error: 'Erro interno do servidor' },
      { status: 500 }
    )
  }
}
