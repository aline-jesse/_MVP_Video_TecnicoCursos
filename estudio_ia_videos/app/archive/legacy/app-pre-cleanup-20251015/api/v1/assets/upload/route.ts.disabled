
/**
 * üé® API Assets Upload - Upload de assets customizados
 */

import { NextRequest, NextResponse } from 'next/server'
import { assetsManager } from '../../../lib/assets-manager'

export async function POST(request: NextRequest) {
  try {
    const formData = await request.formData()
    const file = formData.get('file') as File
    const category = formData.get('category') as string || 'geral'
    const tags = JSON.parse(formData.get('tags') as string || '[]')

    if (!file) {
      return NextResponse.json(
        { error: 'Arquivo √© obrigat√≥rio' },
        { status: 400 }
      )
    }

    // Valida√ß√µes
    if (file.size > 100 * 1024 * 1024) { // 100MB
      return NextResponse.json(
        { error: 'Arquivo muito grande. M√°ximo 100MB.' },
        { status: 400 }
      )
    }

    const allowedTypes = [
      'image/jpeg', 'image/png', 'image/gif', 'image/webp',
      'audio/mpeg', 'audio/wav', 'audio/ogg',
      'video/mp4', 'video/webm', 'video/quicktime',
      'application/pdf'
    ]

    if (!allowedTypes.includes(file.type)) {
      return NextResponse.json(
        { error: 'Tipo de arquivo n√£o suportado' },
        { status: 400 }
      )
    }

    // Upload do asset
    const uploadedAsset = await assetsManager.uploadCustomAsset(file, category, tags)

    return NextResponse.json({
      success: true,
      data: uploadedAsset,
      message: 'Asset enviado com sucesso'
    })

  } catch (error) {
    console.error('Erro no upload do asset:', error)
    return NextResponse.json(
      { error: 'Erro interno do servidor' },
      { status: 500 }
    )
  }
}
